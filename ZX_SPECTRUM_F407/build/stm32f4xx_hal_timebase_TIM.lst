ARM GAS  /tmp/cccSNAk5.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_timebase_TIM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_InitTick,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_InitTick
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_InitTick:
  27              	.LVL0:
  28              	.LFB126:
  29              		.file 1 "Src/stm32f4xx_hal_timebase_TIM.c"
   1:Src/stm32f4xx_hal_timebase_TIM.c **** /**
   2:Src/stm32f4xx_hal_timebase_TIM.c ****   ******************************************************************************
   3:Src/stm32f4xx_hal_timebase_TIM.c ****   * @file    stm32f4xx_hal_timebase_TIM.c 
   4:Src/stm32f4xx_hal_timebase_TIM.c ****   * @brief   HAL time base based on the hardware TIM.
   5:Src/stm32f4xx_hal_timebase_TIM.c ****   ******************************************************************************
   6:Src/stm32f4xx_hal_timebase_TIM.c ****   ** This notice applies to any and all portions of this file
   7:Src/stm32f4xx_hal_timebase_TIM.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/stm32f4xx_hal_timebase_TIM.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/stm32f4xx_hal_timebase_TIM.c ****   * inserted by the user or by software development tools
  10:Src/stm32f4xx_hal_timebase_TIM.c ****   * are owned by their respective copyright owners.
  11:Src/stm32f4xx_hal_timebase_TIM.c ****   *
  12:Src/stm32f4xx_hal_timebase_TIM.c ****   * COPYRIGHT(c) 2020 STMicroelectronics
  13:Src/stm32f4xx_hal_timebase_TIM.c ****   *
  14:Src/stm32f4xx_hal_timebase_TIM.c ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/stm32f4xx_hal_timebase_TIM.c ****   * are permitted provided that the following conditions are met:
  16:Src/stm32f4xx_hal_timebase_TIM.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/stm32f4xx_hal_timebase_TIM.c ****   *      this list of conditions and the following disclaimer.
  18:Src/stm32f4xx_hal_timebase_TIM.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/stm32f4xx_hal_timebase_TIM.c ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/stm32f4xx_hal_timebase_TIM.c ****   *      and/or other materials provided with the distribution.
  21:Src/stm32f4xx_hal_timebase_TIM.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/stm32f4xx_hal_timebase_TIM.c ****   *      may be used to endorse or promote products derived from this software
  23:Src/stm32f4xx_hal_timebase_TIM.c ****   *      without specific prior written permission.
  24:Src/stm32f4xx_hal_timebase_TIM.c ****   *
  25:Src/stm32f4xx_hal_timebase_TIM.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/stm32f4xx_hal_timebase_TIM.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/stm32f4xx_hal_timebase_TIM.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/stm32f4xx_hal_timebase_TIM.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/stm32f4xx_hal_timebase_TIM.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/cccSNAk5.s 			page 2


  30:Src/stm32f4xx_hal_timebase_TIM.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/stm32f4xx_hal_timebase_TIM.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/stm32f4xx_hal_timebase_TIM.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:Src/stm32f4xx_hal_timebase_TIM.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/stm32f4xx_hal_timebase_TIM.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/stm32f4xx_hal_timebase_TIM.c ****   *
  36:Src/stm32f4xx_hal_timebase_TIM.c ****   ******************************************************************************
  37:Src/stm32f4xx_hal_timebase_TIM.c ****   */
  38:Src/stm32f4xx_hal_timebase_TIM.c **** 
  39:Src/stm32f4xx_hal_timebase_TIM.c **** /* Includes ------------------------------------------------------------------*/
  40:Src/stm32f4xx_hal_timebase_TIM.c **** #include "stm32f4xx_hal.h"
  41:Src/stm32f4xx_hal_timebase_TIM.c **** #include "stm32f4xx_hal_tim.h"
  42:Src/stm32f4xx_hal_timebase_TIM.c **** /** @addtogroup STM32F7xx_HAL_Examples
  43:Src/stm32f4xx_hal_timebase_TIM.c ****   * @{
  44:Src/stm32f4xx_hal_timebase_TIM.c ****   */
  45:Src/stm32f4xx_hal_timebase_TIM.c **** 
  46:Src/stm32f4xx_hal_timebase_TIM.c **** /** @addtogroup HAL_TimeBase
  47:Src/stm32f4xx_hal_timebase_TIM.c ****   * @{
  48:Src/stm32f4xx_hal_timebase_TIM.c ****   */ 
  49:Src/stm32f4xx_hal_timebase_TIM.c **** 
  50:Src/stm32f4xx_hal_timebase_TIM.c **** /* Private typedef -----------------------------------------------------------*/
  51:Src/stm32f4xx_hal_timebase_TIM.c **** /* Private define ------------------------------------------------------------*/
  52:Src/stm32f4xx_hal_timebase_TIM.c **** /* Private macro -------------------------------------------------------------*/
  53:Src/stm32f4xx_hal_timebase_TIM.c **** /* Private variables ---------------------------------------------------------*/
  54:Src/stm32f4xx_hal_timebase_TIM.c **** TIM_HandleTypeDef        htim1; 
  55:Src/stm32f4xx_hal_timebase_TIM.c **** uint32_t                 uwIncrementState = 0;
  56:Src/stm32f4xx_hal_timebase_TIM.c **** /* Private function prototypes -----------------------------------------------*/
  57:Src/stm32f4xx_hal_timebase_TIM.c **** /* Private functions ---------------------------------------------------------*/
  58:Src/stm32f4xx_hal_timebase_TIM.c **** 
  59:Src/stm32f4xx_hal_timebase_TIM.c **** /**
  60:Src/stm32f4xx_hal_timebase_TIM.c ****   * @brief  This function configures the TIM1 as a time base source. 
  61:Src/stm32f4xx_hal_timebase_TIM.c ****   *         The time source is configured  to have 1ms time base with a dedicated 
  62:Src/stm32f4xx_hal_timebase_TIM.c ****   *         Tick interrupt priority. 
  63:Src/stm32f4xx_hal_timebase_TIM.c ****   * @note   This function is called  automatically at the beginning of program after
  64:Src/stm32f4xx_hal_timebase_TIM.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  65:Src/stm32f4xx_hal_timebase_TIM.c ****   * @param  TickPriority: Tick interrupt priorty.
  66:Src/stm32f4xx_hal_timebase_TIM.c ****   * @retval HAL status
  67:Src/stm32f4xx_hal_timebase_TIM.c ****   */
  68:Src/stm32f4xx_hal_timebase_TIM.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  69:Src/stm32f4xx_hal_timebase_TIM.c **** {
  30              		.loc 1 69 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 32
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 69 1 is_stmt 0 view .LVU1
  35 0000 10B5     		push	{r4, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40 0002 88B0     		sub	sp, sp, #32
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 40
  43 0004 0146     		mov	r1, r0
  70:Src/stm32f4xx_hal_timebase_TIM.c ****   RCC_ClkInitTypeDef    clkconfig;
  44              		.loc 1 70 3 is_stmt 1 view .LVU2
  71:Src/stm32f4xx_hal_timebase_TIM.c ****   uint32_t              uwTimclock = 0;
ARM GAS  /tmp/cccSNAk5.s 			page 3


  45              		.loc 1 71 3 view .LVU3
  46              	.LVL1:
  72:Src/stm32f4xx_hal_timebase_TIM.c ****   uint32_t              uwPrescalerValue = 0;
  47              		.loc 1 72 3 view .LVU4
  73:Src/stm32f4xx_hal_timebase_TIM.c ****   uint32_t              pFLatency;
  48              		.loc 1 73 3 view .LVU5
  74:Src/stm32f4xx_hal_timebase_TIM.c ****   
  75:Src/stm32f4xx_hal_timebase_TIM.c ****   /*Configure the TIM1 IRQ priority */
  76:Src/stm32f4xx_hal_timebase_TIM.c ****   HAL_NVIC_SetPriority(TIM1_UP_TIM10_IRQn, TickPriority ,0); 
  49              		.loc 1 76 3 view .LVU6
  50 0006 0022     		movs	r2, #0
  51 0008 1920     		movs	r0, #25
  52              	.LVL2:
  53              		.loc 1 76 3 is_stmt 0 view .LVU7
  54 000a FFF7FEFF 		bl	HAL_NVIC_SetPriority
  55              	.LVL3:
  77:Src/stm32f4xx_hal_timebase_TIM.c ****   
  78:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Enable the TIM1 global Interrupt */
  79:Src/stm32f4xx_hal_timebase_TIM.c ****   HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn); 
  56              		.loc 1 79 3 is_stmt 1 view .LVU8
  57 000e 1920     		movs	r0, #25
  58 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  59              	.LVL4:
  80:Src/stm32f4xx_hal_timebase_TIM.c ****   
  81:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Enable TIM1 clock */
  82:Src/stm32f4xx_hal_timebase_TIM.c ****   __HAL_RCC_TIM1_CLK_ENABLE();
  60              		.loc 1 82 3 view .LVU9
  61              	.LBB2:
  62              		.loc 1 82 3 view .LVU10
  63 0014 0024     		movs	r4, #0
  64 0016 0194     		str	r4, [sp, #4]
  65              		.loc 1 82 3 view .LVU11
  66 0018 144B     		ldr	r3, .L6
  67 001a 5A6C     		ldr	r2, [r3, #68]
  68 001c 42F00102 		orr	r2, r2, #1
  69 0020 5A64     		str	r2, [r3, #68]
  70              		.loc 1 82 3 view .LVU12
  71 0022 5B6C     		ldr	r3, [r3, #68]
  72 0024 03F00103 		and	r3, r3, #1
  73 0028 0193     		str	r3, [sp, #4]
  74              		.loc 1 82 3 view .LVU13
  75 002a 019B     		ldr	r3, [sp, #4]
  76              	.LBE2:
  77              		.loc 1 82 3 view .LVU14
  83:Src/stm32f4xx_hal_timebase_TIM.c ****   
  84:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Get clock configuration */
  85:Src/stm32f4xx_hal_timebase_TIM.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  78              		.loc 1 85 3 view .LVU15
  79 002c 02A9     		add	r1, sp, #8
  80 002e 03A8     		add	r0, sp, #12
  81 0030 FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  82              	.LVL5:
  86:Src/stm32f4xx_hal_timebase_TIM.c ****   
  87:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Compute TIM1 clock */
  88:Src/stm32f4xx_hal_timebase_TIM.c ****   uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
  83              		.loc 1 88 3 view .LVU16
  84              		.loc 1 88 18 is_stmt 0 view .LVU17
ARM GAS  /tmp/cccSNAk5.s 			page 4


  85 0034 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
  86              	.LVL6:
  87              		.loc 1 88 14 view .LVU18
  88 0038 4300     		lsls	r3, r0, #1
  89              	.LVL7:
  89:Src/stm32f4xx_hal_timebase_TIM.c ****    
  90:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Compute the prescaler value to have TIM1 counter clock equal to 1MHz */
  91:Src/stm32f4xx_hal_timebase_TIM.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
  90              		.loc 1 91 3 is_stmt 1 view .LVU19
  91              		.loc 1 91 46 is_stmt 0 view .LVU20
  92 003a 0D48     		ldr	r0, .L6+4
  93 003c A0FB0323 		umull	r2, r3, r0, r3
  94              	.LVL8:
  95              		.loc 1 91 46 view .LVU21
  96 0040 9B0C     		lsrs	r3, r3, #18
  97              		.loc 1 91 20 view .LVU22
  98 0042 013B     		subs	r3, r3, #1
  99              	.LVL9:
  92:Src/stm32f4xx_hal_timebase_TIM.c ****   
  93:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Initialize TIM1 */
  94:Src/stm32f4xx_hal_timebase_TIM.c ****   htim1.Instance = TIM1;
 100              		.loc 1 94 3 is_stmt 1 view .LVU23
 101              		.loc 1 94 18 is_stmt 0 view .LVU24
 102 0044 0B48     		ldr	r0, .L6+8
 103 0046 0C4A     		ldr	r2, .L6+12
 104 0048 0260     		str	r2, [r0]
  95:Src/stm32f4xx_hal_timebase_TIM.c ****   
  96:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Initialize TIMx peripheral as follow:
  97:Src/stm32f4xx_hal_timebase_TIM.c ****   + Period = [(TIM1CLK/1000) - 1]. to have a (1/1000) s time base.
  98:Src/stm32f4xx_hal_timebase_TIM.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  99:Src/stm32f4xx_hal_timebase_TIM.c ****   + ClockDivision = 0
 100:Src/stm32f4xx_hal_timebase_TIM.c ****   + Counter direction = Up
 101:Src/stm32f4xx_hal_timebase_TIM.c ****   */
 102:Src/stm32f4xx_hal_timebase_TIM.c ****   htim1.Init.Period = (1000000 / 1000) - 1;
 105              		.loc 1 102 3 is_stmt 1 view .LVU25
 106              		.loc 1 102 21 is_stmt 0 view .LVU26
 107 004a 40F2E732 		movw	r2, #999
 108 004e C260     		str	r2, [r0, #12]
 103:Src/stm32f4xx_hal_timebase_TIM.c ****   htim1.Init.Prescaler = uwPrescalerValue;
 109              		.loc 1 103 3 is_stmt 1 view .LVU27
 110              		.loc 1 103 24 is_stmt 0 view .LVU28
 111 0050 4360     		str	r3, [r0, #4]
 104:Src/stm32f4xx_hal_timebase_TIM.c ****   htim1.Init.ClockDivision = 0;
 112              		.loc 1 104 3 is_stmt 1 view .LVU29
 113              		.loc 1 104 28 is_stmt 0 view .LVU30
 114 0052 0461     		str	r4, [r0, #16]
 105:Src/stm32f4xx_hal_timebase_TIM.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 115              		.loc 1 105 3 is_stmt 1 view .LVU31
 116              		.loc 1 105 26 is_stmt 0 view .LVU32
 117 0054 8460     		str	r4, [r0, #8]
 106:Src/stm32f4xx_hal_timebase_TIM.c ****   if(HAL_TIM_Base_Init(&htim1) == HAL_OK)
 118              		.loc 1 106 3 is_stmt 1 view .LVU33
 119              		.loc 1 106 6 is_stmt 0 view .LVU34
 120 0056 FFF7FEFF 		bl	HAL_TIM_Base_Init
 121              	.LVL10:
 122              		.loc 1 106 5 view .LVU35
 123 005a 10B1     		cbz	r0, .L5
ARM GAS  /tmp/cccSNAk5.s 			page 5


 107:Src/stm32f4xx_hal_timebase_TIM.c ****   {
 108:Src/stm32f4xx_hal_timebase_TIM.c ****     /* Start the TIM time Base generation in interrupt mode */
 109:Src/stm32f4xx_hal_timebase_TIM.c ****     return HAL_TIM_Base_Start_IT(&htim1);
 110:Src/stm32f4xx_hal_timebase_TIM.c ****   }
 111:Src/stm32f4xx_hal_timebase_TIM.c ****   
 112:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Return function status */
 113:Src/stm32f4xx_hal_timebase_TIM.c ****   return HAL_ERROR;
 124              		.loc 1 113 10 view .LVU36
 125 005c 0120     		movs	r0, #1
 126              	.L2:
 114:Src/stm32f4xx_hal_timebase_TIM.c **** }
 127              		.loc 1 114 1 view .LVU37
 128 005e 08B0     		add	sp, sp, #32
 129              	.LCFI2:
 130              		.cfi_remember_state
 131              		.cfi_def_cfa_offset 8
 132              		@ sp needed
 133 0060 10BD     		pop	{r4, pc}
 134              	.L5:
 135              	.LCFI3:
 136              		.cfi_restore_state
 109:Src/stm32f4xx_hal_timebase_TIM.c ****   }
 137              		.loc 1 109 5 is_stmt 1 view .LVU38
 109:Src/stm32f4xx_hal_timebase_TIM.c ****   }
 138              		.loc 1 109 12 is_stmt 0 view .LVU39
 139 0062 0448     		ldr	r0, .L6+8
 140 0064 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 141              	.LVL11:
 142 0068 F9E7     		b	.L2
 143              	.L7:
 144 006a 00BF     		.align	2
 145              	.L6:
 146 006c 00380240 		.word	1073887232
 147 0070 83DE1B43 		.word	1125899907
 148 0074 00000000 		.word	htim1
 149 0078 00000140 		.word	1073807360
 150              		.cfi_endproc
 151              	.LFE126:
 153              		.section	.text.HAL_SuspendTick,"ax",%progbits
 154              		.align	1
 155              		.global	HAL_SuspendTick
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu fpv4-sp-d16
 161              	HAL_SuspendTick:
 162              	.LFB127:
 115:Src/stm32f4xx_hal_timebase_TIM.c **** 
 116:Src/stm32f4xx_hal_timebase_TIM.c **** /**
 117:Src/stm32f4xx_hal_timebase_TIM.c ****   * @brief  Suspend Tick increment.
 118:Src/stm32f4xx_hal_timebase_TIM.c ****   * @note   Disable the tick increment by disabling TIM1 update interrupt.
 119:Src/stm32f4xx_hal_timebase_TIM.c ****   * @param  None
 120:Src/stm32f4xx_hal_timebase_TIM.c ****   * @retval None
 121:Src/stm32f4xx_hal_timebase_TIM.c ****   */
 122:Src/stm32f4xx_hal_timebase_TIM.c **** void HAL_SuspendTick(void)
 123:Src/stm32f4xx_hal_timebase_TIM.c **** {
 163              		.loc 1 123 1 is_stmt 1 view -0
ARM GAS  /tmp/cccSNAk5.s 			page 6


 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 124:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Disable TIM1 update Interrupt */
 125:Src/stm32f4xx_hal_timebase_TIM.c ****   __HAL_TIM_DISABLE_IT(&htim1, TIM_IT_UPDATE);                                                  
 168              		.loc 1 125 3 view .LVU41
 169 0000 034B     		ldr	r3, .L9
 170 0002 1A68     		ldr	r2, [r3]
 171 0004 D368     		ldr	r3, [r2, #12]
 172 0006 23F00103 		bic	r3, r3, #1
 173 000a D360     		str	r3, [r2, #12]
 126:Src/stm32f4xx_hal_timebase_TIM.c **** }
 174              		.loc 1 126 1 is_stmt 0 view .LVU42
 175 000c 7047     		bx	lr
 176              	.L10:
 177 000e 00BF     		.align	2
 178              	.L9:
 179 0010 00000000 		.word	htim1
 180              		.cfi_endproc
 181              	.LFE127:
 183              		.section	.text.HAL_ResumeTick,"ax",%progbits
 184              		.align	1
 185              		.global	HAL_ResumeTick
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv4-sp-d16
 191              	HAL_ResumeTick:
 192              	.LFB128:
 127:Src/stm32f4xx_hal_timebase_TIM.c **** 
 128:Src/stm32f4xx_hal_timebase_TIM.c **** /**
 129:Src/stm32f4xx_hal_timebase_TIM.c ****   * @brief  Resume Tick increment.
 130:Src/stm32f4xx_hal_timebase_TIM.c ****   * @note   Enable the tick increment by Enabling TIM1 update interrupt.
 131:Src/stm32f4xx_hal_timebase_TIM.c ****   * @param  None
 132:Src/stm32f4xx_hal_timebase_TIM.c ****   * @retval None
 133:Src/stm32f4xx_hal_timebase_TIM.c ****   */
 134:Src/stm32f4xx_hal_timebase_TIM.c **** void HAL_ResumeTick(void)
 135:Src/stm32f4xx_hal_timebase_TIM.c **** {
 193              		.loc 1 135 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 136:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Enable TIM1 Update interrupt */
 137:Src/stm32f4xx_hal_timebase_TIM.c ****   __HAL_TIM_ENABLE_IT(&htim1, TIM_IT_UPDATE);
 198              		.loc 1 137 3 view .LVU44
 199 0000 034B     		ldr	r3, .L12
 200 0002 1A68     		ldr	r2, [r3]
 201 0004 D368     		ldr	r3, [r2, #12]
 202 0006 43F00103 		orr	r3, r3, #1
 203 000a D360     		str	r3, [r2, #12]
 138:Src/stm32f4xx_hal_timebase_TIM.c **** }
 204              		.loc 1 138 1 is_stmt 0 view .LVU45
 205 000c 7047     		bx	lr
 206              	.L13:
 207 000e 00BF     		.align	2
ARM GAS  /tmp/cccSNAk5.s 			page 7


 208              	.L12:
 209 0010 00000000 		.word	htim1
 210              		.cfi_endproc
 211              	.LFE128:
 213              		.global	uwIncrementState
 214              		.comm	htim1,60,4
 215              		.section	.bss.uwIncrementState,"aw",%nobits
 216              		.align	2
 219              	uwIncrementState:
 220 0000 00000000 		.space	4
 221              		.text
 222              	.Letext0:
 223              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 224              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 225              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 226              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 227              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 228              		.file 7 "/usr/include/newlib/sys/_types.h"
 229              		.file 8 "/usr/include/newlib/sys/reent.h"
 230              		.file 9 "/usr/include/newlib/sys/lock.h"
 231              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 232              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 233              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 234              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 235              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/cccSNAk5.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_timebase_TIM.c
     /tmp/cccSNAk5.s:18     .text.HAL_InitTick:0000000000000000 $t
     /tmp/cccSNAk5.s:26     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cccSNAk5.s:146    .text.HAL_InitTick:000000000000006c $d
                            *COM*:000000000000003c htim1
     /tmp/cccSNAk5.s:154    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cccSNAk5.s:161    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cccSNAk5.s:179    .text.HAL_SuspendTick:0000000000000010 $d
     /tmp/cccSNAk5.s:184    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cccSNAk5.s:191    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cccSNAk5.s:209    .text.HAL_ResumeTick:0000000000000010 $d
     /tmp/cccSNAk5.s:219    .bss.uwIncrementState:0000000000000000 uwIncrementState
     /tmp/cccSNAk5.s:216    .bss.uwIncrementState:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK2Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
